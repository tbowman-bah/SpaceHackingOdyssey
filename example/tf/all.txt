provider "aws" {
  region = "us-east-1" # Replace with your desired region
}

resource "aws_vpc" "space_vehicle_vpc" {
  cidr_block           = "10.10.0.0/16"
  enable_dns_support   = true
  enable_dns_hostnames = true

  tags = {
    Name = "SpaceVehicleVPC"
  }
}

resource "aws_internet_gateway" "space_vehicle_igw" {
  vpc_id = aws_vpc.space_vehicle_vpc.id

  tags = {
    Name = "SpaceVehicleIGW"
  }
}

resource "aws_subnet" "public_subnet" {
  vpc_id                  = aws_vpc.space_vehicle_vpc.id
  cidr_block              = "10.10.20.0/24"
  map_public_ip_on_launch = true
  availability_zone       = data.aws_availability_zones.available.names[0]
}

resource "aws_subnet" "private_subnet" {
  vpc_id            = aws_vpc.space_vehicle_vpc.id
  cidr_block        = "10.10.10.0/24"
  availability_zone = data.aws_availability_zones.available.names[0]
}

resource "aws_route_table" "public_route_table" {
  vpc_id = aws_vpc.space_vehicle_vpc.id

  tags = {
    Name = "PublicRouteTable"
  }
}

resource "aws_route" "public_route" {
  route_table_id         = aws_route_table.public_route_table.id
  destination_cidr_block = "0.0.0.0/0"
  gateway_id             = aws_internet_gateway.space_vehicle_igw.id
}

resource "aws_security_group" "operator_sg" {
  vpc_id = aws_vpc.space_vehicle_vpc.id

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 3389
    to_port     = 3389
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = -1
    to_port     = -1
    protocol    = "-1"
    cidr_blocks = ["10.10.10.10/32", "10.10.20.10/32"]
  }

  tags = {
    Name = "OperatorSecurityGroup"
  }
}

resource "aws_security_group" "ground_station_sg" {
  vpc_id = aws_vpc.space_vehicle_vpc.id

  ingress {
    from_port   = -1
    to_port     = -1
    protocol    = "-1"
    cidr_blocks = ["10.10.20.20/32", "10.10.10.10/32"]
  }

  egress {
    from_port   = -1
    to_port     = -1
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "GroundStationSecurityGroup"
  }
}

resource "aws_security_group" "satellite_sg" {
  vpc_id = aws_vpc.space_vehicle_vpc.id

  ingress {
    from_port   = 0
    to_port     = 65535
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 0
    to_port     = 65535
    protocol    = "udp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = -1
    to_port     = -1
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "SatelliteSecurityGroup"
  }
}

resource "aws_instance" "operator_station" {
  ami                         = "ami-0b4eeeedb09746c68" # Replace with the actual AMI ID
  instance_type               = "c5.xlarge"
  subnet_id                   = aws_subnet.public_subnet.id
  security_groups             = [aws_security_group.operator_sg.name]
  key_name                    = "bhus24" # Replace with your key name
  private_ip                  = "10.10.20.20"
  associate_public_ip_address = true

  tags = {
    Name = "OperatorStation"
  }
}

resource "aws_eip" "operator_eip" {
  instance = aws_instance.operator_station.id
}

resource "aws_instance" "ground_station" {
  ami             = "ami-021d420338c6803d5" # Replace with the actual AMI ID
  instance_type   = "t2.xlarge"
  subnet_id       = aws_subnet.public_subnet.id
  security_groups = [aws_security_group.ground_station_sg.name]
  key_name        = "bhus24" # Replace with your key name
  private_ip      = "10.10.20.10"

  tags = {
    Name = "GroundStation"
  }
}

resource "aws_instance" "satellite" {
  ami             = "ami-0d1b30640d4c80725" # Replace with the actual AMI ID
  instance_type   = "c5.xlarge"
  subnet_id       = aws_subnet.private_subnet.id
  security_groups = [aws_security_group.satellite_sg.name]
  key_name        = "bhus24" # Replace with your key name
  private_ip      = "10.10.10.10"

  tags = {
    Name = "Satellite"
  }
}

resource "aws_route53_zone" "space_vehicle_zone" {
  name = "spacevehicle.space"
  vpc {
    vpc_id     = aws_vpc.space_vehicle_vpc.id
    vpc_region = var.region
  }

  comment = "Private hosted zone for spacevehicle.space"
}

resource "aws_route53_zone" "ground_station_zone" {
  name = "groundstation.earth"
  vpc {
    vpc_id     = aws_vpc.space_vehicle_vpc.id
    vpc_region = var.region
  }

  comment = "Private hosted zone for groundstation.earth"
}

resource "aws_route53_record" "operator_station_record" {
  zone_id = aws_route53_zone.ground_station_zone.zone_id
  name    = "operator.groundstation.earth"
  type    = "A"
  ttl     = "60"
  records = [aws_instance.operator_station.private_ip]
}

resource "aws_route53_record" "ground_station_record" {
  zone_id = aws_route53_zone.ground_station_zone.zone_id
  name    = "cosmos.groundstation.earth"
  type    = "A"
  ttl     = "60"
  records = [aws_instance.ground_station.private_ip]
}

resource "aws_route53_record" "satellite_record" {
  zone_id = aws_route53_zone.space_vehicle_zone.zone_id
  name    = "moonlighter.spacevehicle.space"
  type    = "A"
  ttl     = "60"
  records = [aws_instance.satellite.private_ip]
}
